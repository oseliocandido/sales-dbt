version: '3.3'
services:
  database:
    container_name: postgres
    image: postgres:16.1-alpine3.19
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    env_file: 
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'"]
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    restart: always
   
volumes:
  pgdata:


# main:
#     container_name: baseproject
#     build: 
#       context: ./containers/streamlit/
#     ports:
#       - '8501:8501'
#     healthcheck:
#       test: curl --fail http://localhost:8501/ || exit 1
#       interval: 40s
#       timeout: 30s
#       retries: 3
#       start_period: 30s
#     networks:
#       - network-padaria
#     #restart: always
#     depends_on:
#       - database
#     deploy:
#       resources:
#         limits:
#           cpus: '0.5'  
#           memory: 512M


  # dbt:
  #   container_name: dbt
  #   build: 
  #     context: ./containers/dbt/
  #   volumes:
  #     - ./containers/dbt/src:/usr/app/dbt/src
  #     - ./containers/dbt/profiles.yml:/root/.dbt/profiles.yml
  #   env_file:
  #     - ./env/dbt.env
  #   healthcheck:
  #     test: ["CMD-SHELL", "cd ./project && dbt debug || exit 1"]
  #     interval: 40s
  #     timeout: 30s
  #     retries: 3
  #     start_period: 60s
  #   restart: always
  #   tty: true
  #   networks:
  #     - network-padaria